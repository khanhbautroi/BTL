/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package btl_thlt_java;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import org.mindrot.bcrypt.BCrypt;


/**
 *
 * @author Admin
 */
public class SetNewPasswordForm extends javax.swing.JFrame {

    /**
     * Creates new form SetNewPasswordForm
     */
    
    private String username;
    
    public SetNewPasswordForm(String username) {
        this.username = username; // Lưu username vào biến thành viên
        initComponents();
        setLocationRelativeTo(null);
    }
    
    public SetNewPasswordForm() {
        initComponents();
        setLocationRelativeTo(null);
     }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnResetPasswordActionPerformed = new javax.swing.JButton();
        txtNewPassword = new javax.swing.JPasswordField();
        txtConfirmPassword = new javax.swing.JPasswordField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setText("Mật khẩu mới");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setText("Xác nhận mật khẩu mới");

        btnResetPasswordActionPerformed.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        btnResetPasswordActionPerformed.setText("Đặt lại");
        btnResetPasswordActionPerformed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetPasswordActionPerformedActionPerformed(evt);
            }
        });

        txtNewPassword.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        txtConfirmPassword.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtNewPassword)
                            .addComponent(txtConfirmPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 263, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(285, 285, 285)
                        .addComponent(btnResetPasswordActionPerformed, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(109, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(150, 150, 150)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNewPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtConfirmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(111, 111, 111)
                .addComponent(btnResetPasswordActionPerformed)
                .addContainerGap(141, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnResetPasswordActionPerformedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetPasswordActionPerformedActionPerformed
        // Lấy mật khẩu mới từ JPasswordField có tên biến là txtNewPassword
        String newPassword = new String(txtNewPassword.getPassword());
        // Lấy mật khẩu xác nhận từ JPasswordField có tên biến là txtConfirmPassword
        String confirmPassword = new String(txtConfirmPassword.getPassword());

        // *** CẢNH BÁO BẢO MẬT ***
        // QUY TRÌNH NÀY RẤT KHÔNG AN TOÀN VÌ BỎ QUA BƯỚC XÁC MINH DANH TÍNH THỨ HAI (EMAIL/SMS)!
        // KHÔNG DÙNG CHO ỨNG DỤNG THỰC TẾ XỬ LÝ DỮ LIỆU NHẠY CẢM.

        // --- BƯỚC 1: KIỂM TRA MẬT KHẨU MỚI VÀ XÁC NHẬN ---
        // Kiểm tra biến username đã được gán giá trị chưa (để tránh lỗi nếu form được tạo không đúng cách)
         if (this.username == null || this.username.isEmpty()) {
             JOptionPane.showMessageDialog(this, "Lỗi: Không xác định được tài khoản cần đặt lại.", "Lỗi Nội bộ", JOptionPane.ERROR_MESSAGE);
             // Có thể quay lại form Login hoặc ForgotPasswordForm ở đây
             // new Login().setVisible(true); this.dispose();
             return; // Dừng xử lý
         }

        // Kiểm tra không rỗng và kiểm tra khớp
        if (newPassword.isEmpty() || confirmPassword.isEmpty()) {
             JOptionPane.showMessageDialog(this, "Mật khẩu mới và xác nhận không được để trống.", "Lỗi", JOptionPane.ERROR_MESSAGE);
             return; // Dừng xử lý
        }
        if (!newPassword.equals(confirmPassword)) {
            JOptionPane.showMessageDialog(this, "Mật khẩu mới và xác nhận không khớp.", "Lỗi", JOptionPane.ERROR_MESSAGE);
            return; // Dừng xử lý
        }
        // TODO (Tùy chọn): Thêm kiểm tra độ mạnh của mật khẩu mới ở đây (độ dài tối thiểu, ký tự đặc biệt...)
        // --- HẾT BƯỚC 1 ---


        // --- BƯỚC 2: BĂM (HASH) MẬT KHẨU MỚI ---
        // Tạo salt mới (nên tạo salt mới mỗi lần băm)
        String salt = BCrypt.gensalt();
        // Băm mật khẩu mới bằng BCrypt
        String hashedPassword = BCrypt.hashpw(newPassword, salt);
        // --- HẾT BƯỚC 2 ---


        // --- BƯỚC 3: CẬP NHẬT MẬT KHẨU ĐÃ BĂM VÀO CSDL ---
        // Câu lệnh SQL để cập nhật mật khẩu cho tên đăng nhập đã biết (lưu trong biến this.username)
        String sql = "UPDATE accounts SET password = ? WHERE username = ?";

        // Sử dụng try-with-resources để quản lý kết nối và PreparedStatement an toàn
        try (Connection con = KN.KNDL(); // Lấy kết nối từ class KN
             PreparedStatement pst = con.prepareStatement(sql)) {

            pst.setString(1, hashedPassword); // Gán mật khẩu đã băm vào tham số thứ 1 (?)
            pst.setString(2, this.username); // Gán tên đăng nhập vào tham số thứ 2 (?)

            int rowsAffected = pst.executeUpdate(); // Thực thi lệnh UPDATE

            if (rowsAffected > 0) {
                // Cập nhật thành công (ít nhất 1 dòng bị ảnh hưởng)
                JOptionPane.showMessageDialog(this, "Đặt lại mật khẩu thành công!", "Thông báo", JOptionPane.INFORMATION_MESSAGE);

                // --- BƯỚC 4: CHUYỂN VỀ FORM ĐĂNG NHẬP ---
                Login loginForm = new Login(); // Tạo instance form Đăng nhập
                loginForm.setVisible(true); // Hiển thị form Đăng nhập
                loginForm.setLocationRelativeTo(null); // Đặt form Đăng nhập ở giữa

                this.dispose(); // Đóng form Đặt lại mật khẩu hiện tại
                // --- HẾT BƯỚC 4 ---

            } else {
                // Cập nhật thất bại (rowsAffected = 0). Có thể tên đăng nhập không tồn tại (lẽ ra đã check ở form trước)
                // hoặc có lỗi CSDL không ném Exception.
                JOptionPane.showMessageDialog(this, "Có lỗi xảy ra khi cập nhật mật khẩu (không có dòng nào được cập nhật).", "Lỗi", JOptionPane.ERROR_MESSAGE);
            }

        } catch (SQLException e) {
            // Bắt và xử lý lỗi CSDL trong quá trình cập nhật
            JOptionPane.showMessageDialog(this, "Lỗi CSDL khi đặt lại mật khẩu: " + e.getMessage(), "Lỗi Database", JOptionPane.ERROR_MESSAGE);
            e.printStackTrace(); // In chi tiết lỗi ra console
        }
    }//GEN-LAST:event_btnResetPasswordActionPerformedActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SetNewPasswordForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SetNewPasswordForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SetNewPasswordForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SetNewPasswordForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SetNewPasswordForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResetPasswordActionPerformed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField txtConfirmPassword;
    private javax.swing.JPasswordField txtNewPassword;
    // End of variables declaration//GEN-END:variables
}
